---
title: "An Analysis of daily shelter and overnight service usage in Toronto focusing on shelter occupancy and capacity"
author: 
  - "Angel Xu"
thanks: "Code and data are available at: https://github.com/Anjojoo/Toronto-Overnight-Servive-Occupancy-Capacity."
date: today
date-format: long
abstract: "In this report, the overnight service occupancy and capacity of Toronto is analyzed. "
format: 
  pdf: 
    toc: true
    toc-depth: 2
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(opendatatoronto)
library(here)
library(ggplot2)
library(knitr)
library(dplyr)

# Load the analysis data
data <- read_csv(here::here("data", "analysis_data", "analysis_data.csv"))
```


# Introduction

Briefly introduce the analyzing reason and background information.
From what perspective and how to analyze
Key results
Structure introduce

You can and should cross-reference sections and sub-sections. We use @citeR and @alexander2023telling.

The remainder of this paper is structured as follows. @sec-data....



# Data {#sec-data}
## Data Source and Overview
This paper analyzes data from the "Daily Shelter & Overnight Service Occupancy & Capacity" dataset available on the OpenDataToronto portal. The dataset contains a daily record of overnight shelters and service programs collected through Torontoâ€™s Shelter Management Information System (SMIS). Data spans from 2021 to 2024, offering current insights, and is updated daily, except for weekends and holidays, with uploads resuming on the next business day.

A similar dataset, "Daily Shelter Occupancy," is also available on OpenDataToronto but  only provides data up to March 10, 2022, and includes fewer variables. In contrast, "Daily Shelter & Overnight Service Occupancy & Capacity" features the most recent data, refreshed on 25 September, 2024. It builds upon and enhances the earlier dataset by incorporating additional key variables, including "overnight service type" and "actual capacity." The "overnight service type" variable categorizes the types of overnight services offered in Toronto's shelters, helping analyze variations in user counts by service type. The "actual capacity" variable represents the true available capacity of shelters, as opposed to the funding-based capacity in the previous dataset, offering a more accurate measure of occupancy rates for further analysis.

## Data Tools
The data was simulated, extracted, and cleaned by R[@citeR] from the opendatatoronto package[@citeopendatatoronto]. Tidyverse[@citetidyverse], here[@citehere], ggplot2[@citeggplot2], dplyr[@citedplyr], lubridate[@lubridate], janitor[@citejanitor] and knitr[@knitr] are all applied in the analysis.

## Clean Data
Prior to analysis, data cleaning is essential to remove unnecessary columns and create new ones for further examination. The occupancy date variable is converted to a date format, allowing the extraction of the year for subsequent analysis. After this conversion, a new 'year' column is mutated to show trends in service user counts and occupancy rates from 2021 to 2024. 
Once these steps are complete, relevant variables are selected from the raw dataset to simplify and clarify the analysis. The chosen variables include year, occupancy date, overnight service type, service user count, capacity type, actual capacity and occupancy rates. NAs exist in actual capacity and occupancy rates, but there are no needs to eliminate them since due to different capacity type of bed and room, NA appears in the opposite actual capacity and occupancy rates.

## Summary Statistics of Variables
To gain a better overview of the dataset, a table including key variables is provided. Table 1(@tbl-key-variables) presents year, overnight service type, service user count and occupancy rates.
Year represents the year where the observation is collected. Overnight service type represents what service has been provided. Service user count records number of users taking service during that night. Occupancy rates record the proportion of actual capacity that is occupied.

```{r}
#| label: tbl-key-variables
#| echo: false
#| warning: false
#| message: false

#  Create a subset includes key variables
subset <- data[, c("year", "overnight_service_type", "service_user_count", "occupancy_rate_beds", 
                   "occupancy_rate_rooms")]

# Present the first ten rows of key variables as a sample
sample <- head(subset)

# Present the sample as a table
kable(sample, col.names = c("year", "overnight service type", "service user count", 
                            "occupancy rate beds", "occupancy rate rooms"), 
      align = "ccc", 
      caption = "Table 1: Sample of the key variables in Occupancy & Capacity Data")
```

Beside the sample table of ley variables, a summary statistics table of key variables can be provided to clarify some information of the data. Table 2(@tbl-summary-stats) presents the mean and standard deviation of service user counts and two occupancy rates. Service user counts has a mean at 60.58 and a standard deviation at about 76.09% which is pretty high and shows the great difference in user picks between different services. Occupancy rate of beds has a high mean at 96.24% and a standard deviation at 9.28%. This illustrates that the occupency rate of beds are approximately near 100 and are full occupied for most of the situations. Occupancy rate of rooms also has a high mean at 97.03% which is slightly higher than occupancy rate of beds and a standard deviation of 10.82%, suggesting that capacity of shelter rooms reaches nearly full and fuller than shelter rooms. However, the actual capacity of beds and rooms aren't included in this table; thus, the usage of shelter beds and rooms need to be considered more thoroughly by observing their actual capacity numbers. 

```{r}
#| label: tbl-summary-stats
#| echo: false
#| warning: false
#| message: false

# Calculate the mean of variables
mean_user_cnt <- mean(data$service_user_count)
mean_rate_bed <- mean(data$occupancy_rate_beds, na.rm = TRUE)
mean_rate_room <- mean(data$occupancy_rate_rooms, na.rm = TRUE)

# Calculate the sd of variables
sd_user_cnt <- sd(data$service_user_count)
sd_rate_bed <- sd(data$occupancy_rate_beds, na.rm = TRUE)
sd_rate_room <- sd(data$occupancy_rate_rooms, na.rm = TRUE)

#  Create a subset includes key variables
summary_stats <- data.frame(Variable = c("Service User Count", "Occupancy Rate of Beds", 
                                         "Occupancy Rate of Rooms"), 
                            Mean = c(mean_user_cnt, mean_rate_bed, mean_rate_room), 
                            SD = c(sd_user_cnt, sd_rate_bed, sd_rate_room))

# Present the sample as a table
kable(summary_stats, col.names = c("Variable", "Mean", "Standard Deviation"), 
      align = "ccc", 
      caption = "Table 2: Mean and Standard Deviation of Key Variables")
```

For deeper explore in service user count and capacity in different years, the sum of these variables from 2021 to 2024 needs to be examined. Occupancy rate of beds and rooms cannot reflect the total difference usage of all shelters, as well as the mean of service user counts. They can only represent the common usage situation of every shelter in total. While Table 3(@tbl-total) provides a table of total service user counts and actual capacity for both beds and rooms. Within these data, a more complete result can be figured out and will be used for data visualization later.

```{r}
#| label: tbl-total
#| echo: false
#| warning: false
#| message: false

# Calculate the sum of service user counts in each year
sum_cnt_2021 <- sum(data$service_user_count[data$year == 2021], na.rm = TRUE)
sum_cnt_2022 <- sum(data$service_user_count[data$year == 2022], na.rm = TRUE)
sum_cnt_2023 <- sum(data$service_user_count[data$year == 2023], na.rm = TRUE)
sum_cnt_2024 <- sum(data$service_user_count[data$year == 2024], na.rm = TRUE)

# Calculate the sum of actual bed capacity in each year
sum_bed_2021 <- sum(data$capacity_actual_bed[data$year == 2021], na.rm = TRUE)
sum_bed_2022 <- sum(data$capacity_actual_bed[data$year == 2022], na.rm = TRUE)
sum_bed_2023 <- sum(data$capacity_actual_bed[data$year == 2023], na.rm = TRUE)
sum_bed_2024 <- sum(data$capacity_actual_bed[data$year == 2024], na.rm = TRUE)

# Calculate the sum of actual bed capacity in each year
sum_room_2021 <- sum(data$capacity_actual_room[data$year == 2021], na.rm = TRUE)
sum_room_2022 <- sum(data$capacity_actual_room[data$year == 2022], na.rm = TRUE)
sum_room_2023 <- sum(data$capacity_actual_room[data$year == 2023], na.rm = TRUE)
sum_room_2024 <- sum(data$capacity_actual_room[data$year == 2024], na.rm = TRUE)

#  Create a subset includes key variables
summary_stats <- data.frame(Year = c("2021", "2022", "2023", "2024"), 
                            Service_User_Counts_Sum = c(sum_cnt_2021, sum_cnt_2022, 
                                                       sum_cnt_2023, sum_cnt_2024), 
                            Actual_Bed_Capacity_Sum = c(sum_bed_2021, sum_bed_2022, 
                                                        sum_bed_2023, sum_bed_2024), 
                            Actual_Room_Capacity_Sum = c(sum_room_2021, sum_room_2022, 
                                                         sum_room_2023, sum_room_2024)
                            )

# Present the sample as a table
kable(summary_stats, col.names = c("Year", "Total Service User Counts", 
                                   "Total Actual Bed Capacity", "Total Actual Room Capacity"), 
      align = "ccc", 
      caption = "Table 3: Total Service User Count and Actual Capacity between years")
```

# Result
Some of our data is of penguins (@fig-bills), from @palmerpenguins.

```{r}
#| label: fig-service-types
#| fig-cap: Total service user counts for different overnight service types
#| echo: false
#| warning: false
#| message: false

data |> ggplot(aes(x = overnight_service_type, y = service_user_count)) +  
  geom_col() + 
  theme_minimal() + 
  labs(x = "overnight service types", y = "service user counts") + 
  coord_flip()


```

Talk more about it.

And also planes (@fig-planes). (You can change the height and width, but don't worry about doing that until you have finished every other aspect of the paper - Quarto will try to make it look nice and the defaults usually work well once you have enough text.)

```{r}
#| label: fig-year-count
#| fig-cap: Service user count change from 2021 to 2024
#| echo: false
#| warning: false
#| message: false

data$year <- as.factor(data$year)

data |> ggplot(aes(x = year, y = service_user_count)) +  
  geom_col() + 
  theme_minimal() + 
  labs(x = "years", y = "service user counts") +  
  scale_y_continuous(labels = scales::comma)
```

Talk way more about it. 

```{r}
#| label: fig-year-count
#| fig-cap: Service user count change from 2021 to 2024
#| echo: false
#| warning: false
#| message: false

data$year <- as.factor(data$year)

data |> ggplot(aes(x = year, y = occurency_rate_beds)) +  
  geom_line() + 
  theme_minimal() + 
  labs(x = "years", y = "service user counts") + 
  scale_y_continuous(labels = scales::comma)

```


\newpage


# References


